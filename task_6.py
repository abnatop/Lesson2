# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента
# — номер товара и словарь с параметрами (характеристиками товара: название, цена, количество,
# единица измерения). Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
#
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

REC_POS = 1        # индекс словаря в записи
PRODUCT_NAME = 0   # индекс ключа 'название'
PRODUCT_PRICE = 1  # индекс ключа 'цена'
PRODUCT_COUNT = 2  # индекс ключа 'количество'
PRODUCT_UNIT = 3   # индекс ключа 'ед'

database = [
    (1, {'название': 'компьютер', 'цена': 20000, 'количество': 5, 'ед': 'шт.'}),
    (2, {'название': 'принтер', 'цена': 2000, 'количество': 2, 'ед': 'шт.'}),
    (3, {'название': 'сканер', 'цена': 2000, 'количество': 2, 'ед': 'ед.'}),
    (4, {'название': 'принтер', 'цена': 8000, 'количество': 4, 'ед': 'шт.'})
]

product_card = {}
product_params = [
    'название',
    'цена',
    'количество',
    'ед'
]

counter = 1
while True:
    name = input('Введите название товара (или END для выхода): ')
    if name == 'END':
        break
    price = input('Введите цену товара: ')
    count = input('Введите количество товара: ')
    unit = input('Введите единицу измерения товара: ')

    product_card = {
        product_params[PRODUCT_NAME]: name,
        product_params[PRODUCT_PRICE]: price,
        product_params[PRODUCT_COUNT]: count,
        product_params[PRODUCT_UNIT]: unit
    }
    database.append(tuple((counter, product_card)))
    counter += 1

product_analysis = {}
for product_param in product_params:
    param_result = []

    for product in database:
        key_value = product[REC_POS][product_param]
        if key_value not in param_result:
            param_result.append(key_value)

    product_analysis[product_param] = param_result

for param in product_params:
    print(param, product_analysis[param])